<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
	<!-- 配置mybatis的缓存，延迟加载等等一系列属性 -->
	<settings>
		<!-- 全局映射器启用缓存 -->
		<setting name="cacheEnabled" value="false" />
		<!-- 查询时，关闭关联对象即时加载以提高性能 -->
		<setting name="lazyLoadingEnabled" value="false" />
		<!-- 设置关联对象加载的形态，此处为按需加载字段(加载字段由SQL指 定)，不会加载关联表的所有字段，以提高性能 -->
		<setting name="aggressiveLazyLoading" value="false" />
		<!-- 对于未知的SQL查询，允许返回不同的结果集以达到通用的效果 -->
		<setting name="multipleResultSetsEnabled" value="true" />
		<!-- 允许使用列标签代替列名 -->
		<setting name="useColumnLabel" value="true" />
		<!-- 允许使用自定义的主键值(比如由程序生成的UUID 32位编码作为键值)，数据表的PK生成策略将被覆盖 -->
		<!-- <setting name="useGeneratedKeys" value="true" /> -->
		<!-- 给予被嵌套的resultMap以字段-属性的映射支持 -->
		<setting name="autoMappingBehavior" value="FULL" />
		<!-- 对于批量更新操作缓存SQL以提高性能 -->
		<setting name="defaultExecutorType" value="BATCH" />
		<!-- 数据库超过25秒仍未响应则超时 -->
		<setting name="defaultStatementTimeout" value="25" />
	</settings>

	<mappers>
		<!-- resource：引用类路径下的文件
             url：引用磁盘路径下的资源
              <mapper url="file:///var/mappers/UserMapper.xml"/>
             class，引用接口
        -->
        <!-- 第一种：注册sql映射文件-->
        <mapper resource="mapper/UserMapper.xml"/>

        <!-- 第二种：注册接口   sql映射文件必须与接口同名，并且放在同一目录下-->
        <!--<mapper class="com.stayreal.mybatis.UserMapper"/>-->

        <!-- 第三种：注册基于注解的接口  基于注解   没有sql映射文件，所有的sql都是利用注解写在接口上-->
        <!--<mapper class="com.stayreal.mybatis.EmployeeMapperAnnotation"/>-->

        <!-- 第四种： 批量注册  注意：如果是基于注解的接口，此方法没问题；如果是基于sql配置文件的，需要将sql配置文件和接口放到同一目录下-->
<!--         <package name="com.stayreal.mybatis"></package> -->
	</mappers>
</configuration>